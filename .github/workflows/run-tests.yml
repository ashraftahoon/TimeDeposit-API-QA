name: Run API Tests with Network Isolation

on:
  push:
    branches: [main, test-actions]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout tests repo
        uses: actions/checkout@v3

      - name: Checkout backend source
        uses: actions/checkout@v3
        with:
          repository: Modealf/TimeDepositAPI
          path: backend

      - name: Create Docker network
        run: docker network create test-network

      - name: Start PostgreSQL container
        run: |
          docker run -d --name test-db \
            --network test-network \
            -e POSTGRES_USER=modealf \
            -e POSTGRES_PASSWORD=pass \
            -e POSTGRES_DB=time_deposit_db \
            -p 5432:5432 \
            postgres:15
          sleep 10 # Wait for DB initialization

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install dotnet-ef tool
        run: |
          dotnet tool install --global dotnet-ef
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run EF Core Migrations
        working-directory: ./backend
        run: |
          dotnet ef database update \
            --connection "Host=test-db;Database=time_deposit_db;Username=modealf;Password=pass"

      - name: Build Backend Docker image
        working-directory: ./backend
        run: docker build -t time-deposit-api .

      - name: Start Backend container
        run: |
          docker run -d --name backend \
            --network test-network \
            -p 8080:8080 \
            -e ASPNETCORE_ENVIRONMENT=Development \
            -e ConnectionStrings__DefaultConnection="Host=test-db;Database=time_deposit_db;Username=modealf;Password=pass" \
            time-deposit-api
          sleep 15 # Wait for backend initialization

      - name: Verify services
        run: |
          # Check DB connection from backend
          docker exec backend curl -s http://localhost:8080/health
          
          # Check direct access
          curl --retry 5 --retry-delay 3 http://localhost:8080/health

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Run API Tests
        env:
          API_BASE_URL: http://localhost:8080
        run: mvn clean test

      - name: Cleanup
        if: always()
        run: |
          docker stop backend test-db || true
          docker network rm test-network || true