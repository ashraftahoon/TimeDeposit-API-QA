name: API Tests with Database Fix

on:
  push:
    branches: [main, test-actions]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    # Container setup with PostgreSQL
    container:
      image: ubuntu:22.04
      volumes:
        - postgres_data:/var/lib/postgresql/data

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: timedeposit
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d timedeposit"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --mount type=volume,source=postgres_data,target=/var/lib/postgresql/data

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y postgresql-client maven

      - name: Wait for PostgreSQL
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres -d timedeposit; then
              echo "Database is ready!"
              break
            fi
            echo "Waiting for database..."
            sleep 2
          done

      - name: Run Tests with DB Retry
        run: |
          for attempt in {1..3}; do
            mvn clean test \
              -Ddb.url=jdbc:postgresql://localhost:5432/timedeposit \
              -Ddb.user=postgres \
              -Ddb.password=1234 \
              && exit 0
            echo "Attempt $attempt failed, retrying..."
            sleep 5
          done
          exit 1

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            target/surefire-reports/*
            target/failsafe-reports/*