name: Run API Tests with Backend Source and EF Migrations

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: modealf
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: time_deposit_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d time_deposit_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout backend source code
        uses: actions/checkout@v3
        with:
          repository: Modealf/TimeDepositAPI
          path: backend

      # [Previous setup steps remain the same...]
      # (dotnet, java, migrations, backend startup)

      - name: Run API Tests and capture Allure results
        id: tests
        continue-on-error: true  # This allows the workflow to continue even if tests fail
        run: |
          # Run tests but always continue to generate report
          mvn clean test
          # Always check for allure results, regardless of test status
          echo "Checking for Allure results..."
          if [ -d "target/allure-results" ]; then
            echo "::notice::Allure results found"
            echo "has_results=true" >> $GITHUB_OUTPUT
          else
            echo "::warning::No Allure results were generated"
            echo "has_results=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Allure Commandline
        if: steps.tests.outputs.has_results == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install allure

      - name: Generate Allure Report
        if: steps.tests.outputs.has_results == 'true'
        run: |
          allure generate target/allure-results -o target/allure-report --clean
          # Save the test status for later use
          echo "tests_passed=${{ steps.tests.outcome == 'success' }}" >> $GITHUB_OUTPUT

      - name: Archive Allure Report
        if: steps.tests.outputs.has_results == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report
          retention-days: 5

      - name: Show test status
        run: |
          if ${{ steps.tests.outcome == 'success' }}; then
            echo "::notice::All tests passed"
          else
            echo "::warning::Some tests failed - see Allure report for details"
          fi

      - name: Fail workflow if tests failed
        if: steps.tests.outcome != 'success'
        run: exit 1