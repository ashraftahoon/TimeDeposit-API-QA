name: Run API Tests with Backend Source and EF Migrations

on:
  push:
    branches:
      - main
      - test-actions
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: modealf
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: time_deposit_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d timedeposit"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout this repo (tests)
        uses: actions/checkout@v3

      - name: Checkout backend source code (manager's repo)
        uses: actions/checkout@v3
        with:
          repository: Modealf/TimeDepositAPI
          path: backend


      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'   # Use your backend .NET version here

      - name: Install dotnet-ef tool
        run: |
          dotnet tool install --global dotnet-ef
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Setup Java (for Maven tests)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Restore backend dependencies
        working-directory: ./backend
        run: dotnet restore

      - name: Run EF Core Migrations
        working-directory: ./backend
        run: dotnet ef database update --connection "Host=localhost;Port=5432;Database=time_deposit_db;Username=modealf;Password=pass"

      - name: Start Backend API (in background)
        working-directory: ./backend
        run: dotnet run --no-build &

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/health | grep -q "Healthy"; then
              echo " Backend is healthy!"
              break
            fi
            echo " Waiting for backend to be ready..."
            sleep 5
          done

      - name: Run API Tests (Maven)
        working-directory: .
        run: mvn clean test

      - name: Generate Allure Report
        working-directory: .
        run: mvn allure:report

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/site/allure-maven-plugin
