name: Run API Tests with Docker

on:
  push:
    branches:
      - main
      - test-actions
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java for tests
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Setup .NET for EF Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Create Docker network
        run: docker network create timedeposit-net

      - name: Start Postgres container
        run: |
          docker run -d --name test-db \
            --network timedeposit-net \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=1234 \
            -e POSTGRES_DB=timedeposit \
            -p 5432:5432 \
            postgres:15
          sleep 10 # Wait for DB to initialize

      - name: Build .NET application
        run: |
          cd TimeDepositAPI-master  # Change to your project directory
          dotnet restore TimeDepositAPI.csproj
          dotnet build TimeDepositAPI.csproj -c Release
          dotnet publish TimeDepositAPI.csproj -c Release -o ./publish

      - name: Apply EF Core Migrations
        run: |
          cd TimeDepositAPI-master
          dotnet tool install --global dotnet-ef
          export PATH="$PATH:$HOME/.dotnet/tools"
          dotnet ef database update \
            --project TimeDepositAPI.csproj \
            --connection "Host=test-db;Port=5432;Database=timedeposit;Username=postgres;Password=1234"

      - name: Start backend container
        run: |
          cd TimeDepositAPI-master
          docker build -t timedeposit-backend -f Dockerfile .
          docker run -d --name backend \
            --network timedeposit-net \
            -e ASPNETCORE_ENVIRONMENT=Development \
            -e ConnectionStrings__DefaultConnection="Host=test-db;Port=5432;Database=timedeposit;Username=postgres;Password=1234;" \
            -p 8080:8080 \
            timedeposit-backend
          sleep 15 # Wait for backend to start

      - name: Verify backend health
        run: |
          curl --retry 5 --retry-delay 5 --retry-all-errors http://localhost:8080/health

      - name: Run API Tests
        env:
          API_BASE_URL: http://localhost:8080
        run: |
          cd TimeDepositAPI-master
          mvn clean test

      - name: Cleanup containers
        if: always()
        run: |
          docker stop backend test-db || true
          docker network rm timedeposit-net || true